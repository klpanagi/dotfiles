!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<C-p>	spacevim/init.vim	/^    nnoremap <silent> <C-p> :Denite file_rec<CR>$/;"	m
ALLOWED_FLAGS	ranger/commands_full.py	/^        from ranger.core.runner import ALLOWED_FLAGS$/;"	i
AS_YOU_TYPE	ranger/commands_full.py	/^    AS_YOU_TYPE     = 't'$/;"	v	class:scout
AUTO_OPEN	ranger/commands_full.py	/^    AUTO_OPEN       = 'a'$/;"	v	class:scout
Dec2Hex	i3/appearance/panels/tron/rings.lua	/^function Dec2Hex(nValue)$/;"	f
FILTER	ranger/commands_full.py	/^    FILTER          = 'f'$/;"	v	class:scout
FILTER_DIRS	ranger/commands_full.py	/^    FILTER_DIRS  = 'd'$/;"	v	class:filter_inode_type
FILTER_FILES	ranger/commands_full.py	/^    FILTER_FILES = 'f'$/;"	v	class:filter_inode_type
FILTER_LINKS	ranger/commands_full.py	/^    FILTER_LINKS = 'l'$/;"	v	class:filter_inode_type
File	ranger/commands_full.py	/^        from ranger.container.file import File$/;"	i
FileSystemObject	ranger/commands_full.py	/^        from ranger.container.fsobject import FileSystemObject$/;"	i
IGNORE_CASE	ranger/commands_full.py	/^    IGNORE_CASE     = 'i'$/;"	v	class:scout
INVERT	ranger/commands_full.py	/^    INVERT          = 'v'$/;"	v	class:scout
KEEP_OPEN	ranger/commands_full.py	/^    KEEP_OPEN       = 'k'$/;"	v	class:scout
MARK	ranger/commands_full.py	/^    MARK            = 'm'$/;"	v	class:scout
OPEN_ON_ENTER	ranger/commands_full.py	/^    OPEN_ON_ENTER   = 'e'$/;"	v	class:scout
PATH_RE	ranger/commands_full.py	/^    PATH_RE = re.compile(r'^\\s*path="?(.*?)"?\\s*$')$/;"	v	class:setlocal
PERM_FILTER	ranger/commands_full.py	/^    PERM_FILTER     = 'p'$/;"	v	class:scout
SMART_CASE	ranger/commands_full.py	/^    SMART_CASE      = 's'$/;"	v	class:scout
SM_GLOB	ranger/commands_full.py	/^    SM_GLOB         = 'g'$/;"	v	class:scout
SM_LETTERSKIP	ranger/commands_full.py	/^    SM_LETTERSKIP   = 'l'$/;"	v	class:scout
SM_REGEX	ranger/commands_full.py	/^    SM_REGEX        = 'r'$/;"	v	class:scout
UNMARK	ranger/commands_full.py	/^    UNMARK          = 'M'$/;"	v	class:scout
VcsError	ranger/commands_full.py	/^        from ranger.ext.vcs import VcsError$/;"	i
__init__	ranger/commands_full.py	/^    def __init__(self, *args, **kws):$/;"	m	class:scout
_build_regex	ranger/commands_full.py	/^    def _build_regex(self):$/;"	m	class:scout
_command_name	ranger/commands_full.py	/^    _command_name = "meta"$/;"	v	class:prompt_metadata
_console_chain	ranger/commands_full.py	/^    _console_chain = None$/;"	v	class:prompt_metadata
_count	ranger/commands_full.py	/^    def _count(self, move=False, offset=0):$/;"	m	class:scout
_fill_console	ranger/commands_full.py	/^    def _fill_console(self, key):$/;"	m	class:prompt_metadata
_get_app_flags_mode	ranger/commands_full.py	/^    def _get_app_flags_mode(self, string):$/;"	m	class:open_with
_is_app	ranger/commands_full.py	/^    def _is_app(self, arg):$/;"	m	class:open_with
_is_flags	ranger/commands_full.py	/^    def _is_flags(self, arg):$/;"	m	class:open_with
_is_mode	ranger/commands_full.py	/^    def _is_mode(self, arg):$/;"	m	class:open_with
_process_command_stack	ranger/commands_full.py	/^    def _process_command_stack(self):$/;"	m	class:prompt_metadata
_question_callback	ranger/commands_full.py	/^    def _question_callback(self, answer):$/;"	m	class:delete
access	ranger/commands_full.py	/^        from os import access$/;"	i
alias	ranger/commands_full.py	/^class alias(Command):$/;"	c
allow_abbrev	ranger/commands_full.py	/^    allow_abbrev = False$/;"	v	class:delete
allow_abbrev	ranger/commands_full.py	/^    allow_abbrev = False$/;"	v	class:quit_bang
angle_to_position	i3/appearance/panels/side_gray/side_gray.lua	/^function angle_to_position(start_angle, current_angle)$/;"	f
basename	ranger/commands_full.py	/^        from os.path import dirname, basename, expanduser, join$/;"	i
bulkrename	ranger/commands_full.py	/^class bulkrename(Command):$/;"	c
callback	ranger/commands_full.py	/^        def callback(answer):$/;"	f	function:help_.execute
cancel	ranger/commands_full.py	/^    def cancel(self):$/;"	m	class:scout
cd	ranger/commands_full.py	/^class cd(Command):$/;"	c
chain	ranger/commands_full.py	/^class chain(Command):$/;"	c
chmod	ranger/commands_full.py	/^class chmod(Command):$/;"	c
cmap	ranger/commands_full.py	/^class cmap(map_):$/;"	c
conky_main	i3/appearance/panels/side_gray/side_gray.lua	/^function conky_main()$/;"	f
conky_main_pie	i3/appearance/panels/tron/rings.lua	/^function conky_main_pie()$/;"	f
console	ranger/commands_full.py	/^class console(Command):$/;"	c
context	ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:alias
context	ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:copymap
context	ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:cunmap
context	ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:map_
context	ranger/commands_full.py	/^    context = 'browser'$/;"	v	class:unmap
context	ranger/commands_full.py	/^    context = 'console'$/;"	v	class:cmap
context	ranger/commands_full.py	/^    context = 'console'$/;"	v	class:copycmap
context	ranger/commands_full.py	/^    context = 'pager'$/;"	v	class:copypmap
context	ranger/commands_full.py	/^    context = 'pager'$/;"	v	class:pmap
context	ranger/commands_full.py	/^    context = 'pager'$/;"	v	class:punmap
context	ranger/commands_full.py	/^    context = 'taskview'$/;"	v	class:copytmap
context	ranger/commands_full.py	/^    context = 'taskview'$/;"	v	class:tmap
context	ranger/commands_full.py	/^    context = 'taskview'$/;"	v	class:tunmap
copy_buffer_filename	ranger/commands_full.py	/^    copy_buffer_filename = 'copy_buffer'$/;"	v	class:load_copy_buffer
copy_buffer_filename	ranger/commands_full.py	/^    copy_buffer_filename = 'copy_buffer'$/;"	v	class:save_copy_buffer
copycmap	ranger/commands_full.py	/^class copycmap(copymap):$/;"	c
copymap	ranger/commands_full.py	/^class copymap(Command):$/;"	c
copypmap	ranger/commands_full.py	/^class copypmap(copymap):$/;"	c
copytmap	ranger/commands_full.py	/^class copytmap(copymap):$/;"	c
create_pie_settings	i3/appearance/panels/tron/rings.lua	/^function create_pie_settings(tt)$/;"	f
cunmap	ranger/commands_full.py	/^class cunmap(unmap):$/;"	c
default_linemode	ranger/commands_full.py	/^class default_linemode(Command):$/;"	c
delete	ranger/commands_full.py	/^class delete(Command):$/;"	c
diff	ranger/commands_full.py	/^class diff(Command):$/;"	c
dirname	ranger/commands_full.py	/^        from os.path import dirname, basename, expanduser, join$/;"	i
do_mark	ranger/commands_full.py	/^    do_mark = False$/;"	v	class:unmark_tag
do_mark	ranger/commands_full.py	/^    do_mark = True$/;"	v	class:mark_tag
draw_clock_ring	i3/appearance/panels/side_gray/side_gray.lua	/^function draw_clock_ring(display, data, value)$/;"	f
draw_gauge_ring	i3/appearance/panels/side_gray/side_gray.lua	/^function draw_gauge_ring(display, data, value)$/;"	f
draw_lines	i3/appearance/panels/tron/rings.lua	/^    function draw_lines(idx,nbArcs,angle,table_colors,idx_color,adjust,line_lgth,length_txt,txt_offset,radius,line_width,line_space,font_color,font_alpha)$/;"	f
draw_pie	i3/appearance/panels/tron/rings.lua	/^function draw_pie(t)$/;"	f
draw_sector	i3/appearance/panels/tron/rings.lua	/^    local function draw_sector(tablecolor,colorindex,pc,lastAngle,angle,radius,int_radius,gradient_effect,type_arc,inverse_l_arc)$/;"	f
dump	ranger/scope.sh	/^dump() { \/bin\/echo -E "$output"; }$/;"	f
edit	ranger/commands_full.py	/^class edit(Command):$/;"	c
esc	ranger/commands_full.py	/^        from ranger.ext.shell_escape import shell_escape as esc$/;"	i
escape_macros_for_shell	ranger/commands_full.py	/^    escape_macros_for_shell = True$/;"	v	class:shell
eval_	ranger/commands_full.py	/^class eval_(Command):$/;"	c
execute	ranger/commands.py	/^    def execute(self):$/;"	m	class:my_edit
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:alias
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:bulkrename
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:cd
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:chain
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:chmod
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:console
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:copymap
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:default_linemode
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:delete
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:diff
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:edit
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:eval_
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:filter_inode_type
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:flat
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:grep
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:help_
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:linemode
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:load_copy_buffer
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:log
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:map_
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:mark_tag
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:meta
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:mkdir
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:open_with
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:prompt_metadata
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quit
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:quitall
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:relink
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:rename
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:rename_append
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:save_copy_buffer
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:scout
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:set_
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:setintag
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:setlocal
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:shell
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:stage
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:terminal
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:touch
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:unmap
execute	ranger/commands_full.py	/^    def execute(self):$/;"	m	class:unstage
exists	ranger/commands_full.py	/^        from os.path import exists$/;"	i
expanduser	ranger/commands_full.py	/^        from os.path import dirname, basename, expanduser, join$/;"	i
expanduser	ranger/commands_full.py	/^        from os.path import join, expanduser, lexists$/;"	i
filter_inode_type	ranger/commands_full.py	/^class filter_inode_type(Command):$/;"	c
find_mode	i3/scripts/monitors.sh	/^find_mode() {$/;"	f
flat	ranger/commands_full.py	/^class flat(Command):$/;"	c
g:clang2_placeholder_next	spacevim/init.vim	/^let g:clang2_placeholder_next = ''$/;"	v
g:clang2_placeholder_preov	spacevim/init.vim	/^let g:clang2_placeholder_preov = ''$/;"	v
g:ctrlp_map	spacevim/init.vim	/^    let g:ctrlp_map = ''$/;"	v
g:deoplete#auto_complete_delay	spacevim/init.vim	/^let g:deoplete#auto_complete_delay = 150$/;"	v
g:leader	spacevim/init.vim	/^let g:leader = ','$/;"	v
g:neomake_vim_enabled_makers	spacevim/init.vim	/^let g:neomake_vim_enabled_makers = []$/;"	v
g:spacevim_buffer_index_type	spacevim/init.vim	/^let g:spacevim_buffer_index_type = 1$/;"	v
g:spacevim_colorscheme	spacevim/init.vim	/^let g:spacevim_colorscheme = 'onedark'$/;"	v
g:spacevim_colorscheme_bg	spacevim/init.vim	/^let g:spacevim_colorscheme_bg = 'dark'$/;"	v
g:spacevim_custom_plugins	spacevim/init.vim	/^let g:spacevim_custom_plugins = [$/;"	v
g:spacevim_default_indent	spacevim/init.vim	/^let g:spacevim_default_indent = 2$/;"	v
g:spacevim_enable_debug	spacevim/init.vim	/^let g:spacevim_enable_debug = 1$/;"	v
g:spacevim_enable_os_fileformat_icon	spacevim/init.vim	/^let g:spacevim_enable_os_fileformat_icon = 1$/;"	v
g:spacevim_enable_statusline_display_mode	spacevim/init.vim	/^let g:spacevim_enable_statusline_display_mode = 1$/;"	v
g:spacevim_enable_tabline_filetype_icon	spacevim/init.vim	/^let g:spacevim_enable_tabline_filetype_icon = 1$/;"	v
g:spacevim_enable_vimfiler_welcome	spacevim/init.vim	/^let g:spacevim_enable_vimfiler_welcome = 1$/;"	v
g:spacevim_guifont	spacevim/init.vim	/^let g:spacevim_guifont = 'Hack\\ for\\ Powerline'$/;"	v
g:spacevim_max_column	spacevim/init.vim	/^let g:spacevim_max_column     = 80$/;"	v
g:spacevim_realtime_leader_guide	spacevim/init.vim	/^let g:spacevim_realtime_leader_guide = 1$/;"	v
g:spacevim_unite_leader	spacevim/init.vim	/^let g:spacevim_unite_leader = 'f'$/;"	v
g:spacevim_windows_leader	spacevim/init.vim	/^let g:spacevim_windows_leader = 's'$/;"	v
g:tmux_navigator_save_on_switch	spacevim/init.vim	/^let g:tmux_navigator_save_on_switch = 2$/;"	v
gen_workspaces	i3/scripts/i3_switch_workspace.sh	/^function gen_workspaces()$/;"	f
get_all_colorschemes	ranger/commands_full.py	/^        from ranger.gui.colorscheme import get_all_colorschemes$/;"	i
get_executables	ranger/commands_full.py	/^        from ranger.ext.get_executables import get_executables$/;"	i
go_clock_rings	i3/appearance/panels/side_gray/side_gray.lua	/^function go_clock_rings(display)$/;"	f
go_gauge_rings	i3/appearance/panels/side_gray/side_gray.lua	/^function go_gauge_rings(display)$/;"	f
grep	ranger/commands_full.py	/^class grep(Command):$/;"	c
help_	ranger/commands_full.py	/^class help_(Command):$/;"	c
highlight	ranger/scope.sh	/^highlight() { command highlight "$@"; test $? = 0 -o $? = 141; }$/;"	f
i3	i3/scripts/i3_rename.py	/^import i3$/;"	i
i3rnwps	i3/scripts/i3_rename.py	/^def i3rnwps():$/;"	f
intercept	i3/appearance/panels/tron/rings.lua	/^    function intercept(p11,p12,p21,p22)$/;"	f
join	ranger/commands_full.py	/^        from os.path import dirname, basename, expanduser, join$/;"	i
join	ranger/commands_full.py	/^        from os.path import join, expanduser, lexists$/;"	i
lexists	ranger/commands_full.py	/^        from os.path import join, expanduser, lexists$/;"	i
linemode	ranger/commands_full.py	/^class linemode(default_linemode):$/;"	c
load_clock_rings	i3/appearance/panels/side_gray/side_gray.lua	/^    local function load_clock_rings(display, data)$/;"	f
load_copy_buffer	ranger/commands_full.py	/^class load_copy_buffer(Command):$/;"	c
load_gauge_rings	i3/appearance/panels/side_gray/side_gray.lua	/^    local function load_gauge_rings(display, data)$/;"	f
log	ranger/commands_full.py	/^class log(Command):$/;"	c
makedirs	ranger/commands_full.py	/^        from os import makedirs$/;"	i
map_	ranger/commands_full.py	/^class map_(Command):$/;"	c
mark_tag	ranger/commands_full.py	/^class mark_tag(Command):$/;"	c
meta	ranger/commands_full.py	/^class meta(prompt_metadata):$/;"	c
mkdir	ranger/commands_full.py	/^class mkdir(Command):$/;"	c
my_edit	ranger/commands.py	/^class my_edit(Command):$/;"	c
name	ranger/commands_full.py	/^    name = 'eval'$/;"	v	class:eval_
name	ranger/commands_full.py	/^    name = 'help'$/;"	v	class:help_
name	ranger/commands_full.py	/^    name = 'map'$/;"	v	class:map_
name	ranger/commands_full.py	/^    name = 'quit!'$/;"	v	class:quit_bang
name	ranger/commands_full.py	/^    name = 'set'  # don't override the builtin set class$/;"	v	class:set_
open_with	ranger/commands_full.py	/^class open_with(Command):$/;"	c
os	ranger/commands.py	/^import os$/;"	i
os	ranger/commands_full.py	/^        import os$/;"	i
os	ranger/commands_full.py	/^        import os.path$/;"	i
path	ranger/commands_full.py	/^        import os.path$/;"	i
pmap	ranger/commands_full.py	/^class pmap(map_):$/;"	c
prompt_metadata	ranger/commands_full.py	/^class prompt_metadata(Command):$/;"	c
punmap	ranger/commands_full.py	/^class punmap(unmap):$/;"	c
quick	ranger/commands_full.py	/^    def quick(self):$/;"	m	class:scout
quit	ranger/commands_full.py	/^class quit(Command):$/;"	c
quit_bang	ranger/commands_full.py	/^class quit_bang(quitall):$/;"	c
quitall	ranger/commands_full.py	/^class quitall(Command):$/;"	c
rainbowColor	tmux/24-bit-color.sh	/^rainbowColor()$/;"	f
ranger	ranger/commands_full.py	/^        import ranger$/;"	i
re	ranger/commands_full.py	/^        import re$/;"	i
read_df	i3/appearance/panels/tron/rings.lua	/^function read_df(show_media,sort_table)$/;"	f
relink	ranger/commands_full.py	/^class relink(Command):$/;"	c
rename	i3/scripts/i3_rename.py	/^def rename():$/;"	f
rename	ranger/commands_full.py	/^class rename(Command):$/;"	c
rename_append	ranger/commands_full.py	/^class rename_append(Command):$/;"	c
resetOutput	tmux/24-bit-color.sh	/^resetOutput()$/;"	f
resolve_macros	ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:alias
resolve_macros	ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:eval_
resolve_macros	ranger/commands_full.py	/^    resolve_macros = False$/;"	v	class:map_
rgb_to_r_g_b	i3/appearance/panels/side_gray/side_gray.lua	/^function rgb_to_r_g_b(colour, alpha)$/;"	f
rgb_to_r_g_b	i3/appearance/panels/tron/rings.lua	/^function rgb_to_r_g_b(colour, alpha)$/;"	f
round	i3/appearance/panels/tron/rings.lua	/^function round(num, idp)$/;"	f
save_copy_buffer	ranger/commands_full.py	/^class save_copy_buffer(Command):$/;"	c
scout	ranger/commands_full.py	/^class scout(Command):$/;"	c
setBackgroundColor	tmux/24-bit-color.sh	/^setBackgroundColor()$/;"	f
set_	ranger/commands_full.py	/^class set_(Command):$/;"	c
set_settings	i3/appearance/panels/tron/rings.lua	/^function set_settings()$/;"	f
setintag	ranger/commands_full.py	/^class setintag(setlocal):$/;"	c
setlocal	ranger/commands_full.py	/^class setlocal(set_):$/;"	c
shell	ranger/commands_full.py	/^class shell(Command):$/;"	c
size_to_text	i3/appearance/panels/tron/rings.lua	/^function size_to_text(size,nb_dec)$/;"	f
stage	ranger/commands_full.py	/^class stage(Command):$/;"	c
string:split	i3/appearance/panels/tron/rings.lua	/^function string:split(delimiter)$/;"	f
subprocess	i3/scripts/i3_rename.py	/^import subprocess$/;"	i
sys	ranger/commands_full.py	/^        import sys$/;"	i
tab	ranger/commands.py	/^    def tab(self):$/;"	m	class:my_edit
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:cd
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:default_linemode
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:edit
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:meta
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:mkdir
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:open_with
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:relink
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:rename
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:scout
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:set_
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:shell
tab	ranger/commands_full.py	/^    def tab(self):$/;"	m	class:touch
tempfile	ranger/commands_full.py	/^        import tempfile$/;"	i
terminal	ranger/commands_full.py	/^class terminal(Command):$/;"	c
tmap	ranger/commands_full.py	/^class tmap(map_):$/;"	c
touch	ranger/commands_full.py	/^class touch(Command):$/;"	c
trim	ranger/scope.sh	/^trim() { head -n "$maxln"; }$/;"	f
try	ranger/scope.sh	/^try() { output=$(eval '"$@"'); }$/;"	f
tunmap	ranger/commands_full.py	/^class tunmap(unmap):$/;"	c
unmap	ranger/commands_full.py	/^class unmap(Command):$/;"	c
unmark_tag	ranger/commands_full.py	/^class unmark_tag(mark_tag):$/;"	c
unstage	ranger/commands_full.py	/^class unstage(Command):$/;"	c
watch	i3/scripts/i3_rename.py	/^def watch(a,b,c):$/;"	f
xrandr_params_for	i3/scripts/monitors.sh	/^xrandr_params_for() {$/;"	f
