#!/usr/bin/zsh

## DEPENDENCIES
# - fd
# - gawk
# - fzf
# - diff-so-fancy
# - bat


export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib/pkgconfig
export PATH=$PATH:${HOME}/.local/bin
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/.local/lib:${HOME}/.local/lib
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# Check if zplug is installed
if [[ ! -d ~/.zplug ]]; then
    git clone https://github.com/zplug/zplug ~/.zplug
    source ~/.zplug/init.zsh && zplug update --self
fi
# Initialize zplug
source $HOME/.zplug/init.zsh
# Protocol to use to access the remote repository
# ZPLUG_PROTOCOL="SSH"
ZPLUG_PROTOCOL="HTTPS"
# Cache plugins
ZPLUG_USE_CACHE=true

setopt prompt_subst
setopt correct

# Color definitions -----------{
onedark_black="#282c34"
onedark_blue="#61afef"
onedark_yellow="#e5c07b"
onedark_red="#e06c75"
onedark_white="#aab2bf"
onedark_green="#98c379"
onedark_visual_grey="#3e4452"
onedark_comment_grey="#5c6370"

base16_green="#a1b56c"
base16_red="#ab4642"
base16_yellow="#f7ca88"
base16_blue="#7cafc2"
base16_magenta="#ba8baf"
base16_cyan="#86c1b9"
base16_c16="#dc9656"
base16_c17="#a16946"

## Nord palette: https://www.nordtheme.com/docs/colors-and-palettes
nord0="#2E3440"
nord1="#3B4252"
nord2="#434C5E"
nord3="#4C566A"
nord7="#8fbcbb"
nord8="#88c0d0"
nord9="#81a1c1"
nord10="#5e81ac"
nord11="#BF616A"
nord12="#D08770"
nord13="#EBCB8B"
nord14="#A3BE8C"
nord15="#B48EAD"
# -----------------------------}

command -v gawk >/dev/null 2>&1 || \
  {echo "[WARNING]: gawk does not exist, please install!"}

command -v fd >/dev/null 2>&1 || \
  {echo "[WARNING]: fd (simple fast alternative to find) missing! Consider installing via:\n    pacman -Sy fd"}

command -v fzf >/dev/null 2>&1 || \
  {echo "[WARNING]: FZF is missing! Consider installing via:\n    pacman -Sy fzf"}

## Bundles/Plugins -------------------------------{
zplug 'zplug/zplug', hook-build:'zplug --self-manage'
zplug "robbyrussell/oh-my-zsh", use:"lib/*.zsh"
zplug "plugins/command-not-found", from:oh-my-zsh
# zplug "plugins/git", from:oh-my-zsh
zplug "plugins/cp", from:oh-my-zsh
zplug "plugins/colored-man-pages", from:oh-my-zsh
zplug "plugins/ssh-agent", from:oh-my-zsh
zplug "plugins/vi-mode", from:oh-my-zsh
zplug "plugins/pip", from:oh-my-zsh
command -v docker >/dev/null 2>&1 && \
  zplug "plugins/docker", from:oh-my-zsh
zplug "plugins/fzf", from:oh-my-zsh
zplug "chriskempson/base16-shell", \
  use:"scripts/base16-synth-midnight-dark.sh", \
  defer:0
zplug "plugins/tmux", from:oh-my-zsh
zplug "zsh-users/zsh-completions", defer:0
zplug "zsh-users/zsh-autosuggestions", \
  defer:3, on:"zsh-users/zsh-completions"
zplug "zdharma/fast-syntax-highlighting", \
  defer:3, on:"zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-history-substring-search", \
  defer:3 #, on:"zsh-users/zsh-syntax-highlighting"
# ------------------------------------------------}
## Plugins Extra --------------------------------{
# zplug "gko/ssh-connect"
zplug "kutsan/zsh-system-clipboard"
zplug "MichaelAquilina/zsh-you-should-use"
#------------------------------------------------}
zplug "pxgamer/quoter-zsh"
zplug "mafredri/zsh-async", from:github
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
zplug 'wfxr/forgit'

zmodload zsh/nearcolor
zstyle :prompt:pure:path color '$base16_green'
zstyle :prompt:pure:git:branch color '$base16_c16'
zstyle :prompt:pure:git:dirty color '$base16_cyan'
zstyle :prompt:pure:prompt:success color green
zstyle :prompt:pure:prompt:error color '$base16_red'
# -----------------------------------------}

if ! zplug check --verbose; then
    printf "Install zsh plugin? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load

# Load ZSH Modules ----------------{
zmodload zsh/terminfo
zmodload zsh/zpty
# -----------------------}

PURE_PROMPT_SYMBOL="[I] ➜"
PURE_PROMPT_VICMD_SYMBOL="[N] ➜"
PURE_GIT_PULL=1
PURE_GIT_UNTRACKED_DIRTY=1
PURE_GIT_DOWN_ARROW="⇣"
PURE_GIT_UP_ARROW="⇡"
PURE_GIT_STASH_SYMBOL="≡"
zstyle :prompt:pure:git:stash show yes

forgit_log=glo
forgit_diff=gd
forgit_add=ga
forgit_reset_head=grh
# forgit_ignore=gi
forgit_restore=gcf
forgit_clean=gclean
forgit_stash_show=gss

FORGIT_FZF_DEFAULT_OPTS="
--exact
--border
--cycle
--reverse
--height '80%'
"

# zsh-history-substring-search ------------{
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^[[1;5A' history-substring-search-up
bindkey '^[[1;5B' history-substring-search-down
bindkey '^K' history-substring-search-up
bindkey '^J' history-substring-search-down
# ---------------------------}

## zsh-autosuggestions --{
bindkey '^ ' autosuggest-accept
bindkey '^o' autosuggest-execute
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=38"
## --}

# ZSH History config ----------{
setopt append_history
setopt hist_expire_dups_first
setopt hist_fcntl_lock
setopt hist_ignore_all_dups
setopt hist_lex_words
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt share_history
# ----------}

export BROWSER="chromium"
export TERMINAL="termite"

## Compiler
export CC=/usr/bin/gcc
export CXX=/usr/bin/g++

# Locale
export LANG=en_US.UTF-8

if [[ $TERM == xterm-termite ]]; then
  . /etc/profile.d/vte.sh
  __vte_osc7
fi
# export TERM=xterm-256color
export TERM=screen-256color

CASE_SENSITIVE="true"
# HYPHEN_INSENSITIVE="true"
DISABLE_AUTO_UPDATE="true"
# DISABLE_LS_COLORS="true"
DISABLE_AUTO_TITLE="true"
ENABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"
# DISABLE_UNTRACKED_FILES_DIRTY="true"
HIST_STAMPS="mm/dd/yyyy"

# Define colors for ls.
# export LSCOLORS='exfxcxdxbxGxDxabagacad'

# Define colors for the completion system.
# export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:'

# Load user's local lib and bin directories, if exist --------{
if [ -d "$HOME/.local/bin" ]; then
  PATH="$HOME/.local/bin:$PATH"
fi

if [ -d "$HOME/.local/lib" ]; then
  LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH"
fi
# ----------------------------------------------------}

# Select terminal editor between vim and neovim
command -v nvim >/dev/null 2>&1 &&
  { export EDITOR="nvim"; alias vim="nvim" } || export EDITOR="vim"

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

export SSH_KEY_PATH="~/.ssh/id_rsa.pub"

# Auto execute ls command when cding to a directory
auto-ls () {
  if [[ $#BUFFER -eq 0 ]]; then
    zle && echo ""
    ls
    zle && zle redisplay
  else
    zle .$WIDGET
  fi
}

# zle -N auto-ls
# zle -N accept-line auto-ls
# add-zsh-hook chpwd auto-ls

typeset -g ZSH_SYSTEM_CLIPBOARD_TMUX_SUPPORT='true'
typeset -g ZSH_SYSTEM_CLIPBOARD_SELECTION='PRIMARY'

# Aliases --------------------------------------{
if [ -f "${HOME}/.zsh_aliases" ]; then
    source ~/.zsh_aliases
fi

# Functions --------------------------------------{
if [ -f "${HOME}/.zsh_functions" ]; then
    source ~/.zsh_functions
fi

# Vi-mode settings -------------------{
bindkey -v
bindkey -M viins 'jk' vi-cmd-mode
bindkey '^R' history-incremental-search-backward
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down
bindkey '^W' backward-kill-word
bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word
# -------------------------}

# FZF ----------------------------{
# Use ~~ as the trigger sequence instead of the default **
export FZF_COMPLETION_TRIGGER='~~'
# Options to fzf command
export FZF_COMPLETION_OPTS='+c -x'
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border --preview "bat --style=numbers --color=always --line-range :500 {}"'

export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
command -v fd >/dev/null 2>&1 &&
  _fzf_compgen_path() {
    fd --hidden --follow --exclude ".git" . "$1"
  }

command -v fd >/dev/null 2>&1 &&
  _fzf_compgen_dir() {
    fd --type d --hidden --follow --exclude ".git" . "$1"
  }

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf "$@" --preview 'tree -C {} | head -200' ;;
    export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
    ssh)          fzf "$@" --preview 'dig {}' ;;
    *)            fzf "$@" ;;
  esac
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# --------------------------------}

# Smart "bring process to foreground" by pressing ^Z (Ctrl+Z) --{
ctrl-z-restore () {
    if [[ $#BUFFER -eq 0 ]]; then
        BUFFER="fg"
        zle accept-line
    else
        zle push-input
        zle clear-screen
    fi
}

zle -N ctrl-z-restore
bindkey '^Z' ctrl-z-restore
# --------------------------------------------------------}

# Python virtual environment tools ------{
export WORKON_HOME=~/.virtualenvs
[ -f /usr/bin/virtualenvwrapper.sh ] &&
  source /usr/bin/virtualenvwrapper.sh
[ -f /usr/local/bin/virtualenvwrapper.sh ] &&
  source /usr/local/bin/virtualenvwrapper.sh

if [ -n "$VIRTUAL_ENV" ]; then
  . "$VIRTUAL_ENV/bin/activate"
fi
# ------------------------------------}

if [ -f "~/.zshrc_platform" ]; then
  source ~/.zshrc_platform
fi

# RUN='neofetch --cpu_temp C --gtk_shorthand off --gtk2 off --gtk3 off'
# command -v neofetch >/dev/null 2>&1 && eval "$RUN"

export GITHUB_ACCESS_TOKEN_FILE="${HOME}/.github-access.token"

command -v docker >/dev/null 2>&1 && \
  [ "$(docker ps | grep netdata)" ] && \
  echo "[*] - Netdata Real-time performance monitoring agent is runniny. Visit http://$(hostname):19999"

source /usr/share/nvm/init-nvm.sh
